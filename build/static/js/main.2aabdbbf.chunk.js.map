{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","smartContract2","smartContract3","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","balanceOf","getAllRewards","getAllRewardsWMC","balanceOfWMC","getTokensStaked","getTokensStakedWMC","isApprovedUSTD","isApprovedWMC","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","isApprovedForAll","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","button","StyledButton","ResponsiveWrapper","StyledImg","img","App","min","max","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","setApprovingUSTD","getData","rndInt","Math","floor","random","getTextAndStake","idArray","stakeByIds","send","from","once","err","then","receipt","stake","document","getElementById","value","getTextAndStakeWMC","stakeWMC","useEffect","style","backgroundColor","padding","textAlign","fontSize","fontWeight","onClick","e","preventDefault","window","open","color","ethereum","isMetaMask","Web3","request","method","accounts","SmartContractObj","eth","Contract","SmartContract","abi","SmartContractObj2","SmartContract2","SmartContractObj3","SmartContract3","on","location","reload","disabled","setApprovalForAll","id","required","minlength","size","placeholder","paddingLeft","target","href","alt","src","background","margin","borderRadius","toString","claimAll","length","unstakeAll","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.2aabdbbf.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  smartContract2: null,\n  smartContract3: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        smartContract2: action.payload.smartContract2,\n        smartContract3: action.payload.smartContract3,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  balanceOf: 0,\n  getAllRewards: 0,\n  getAllRewardsWMC: 0,\n  balanceOfWMC: 0,\n  getTokensStaked: [],\n  getTokensStakedWMC: [],\n  isApprovedUSTD: false,\n  isApprovedWMC: false,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...initialState,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        getAllRewards: action.payload.getAllRewards,\n        balanceOf: action.payload.balanceOf,\n        getAllRewards: action.payload.getAllRewards,\n        getTokensStaked: action.payload.getTokensStaked,\n        getTokensStakedWMC: action.payload.getTokensStakedWMC,\n        getAllRewardsWMC: action.payload.getAllRewardsWMC,\n        balanceOfWMC: action.payload.balanceOfWMC,\n        isApprovedUSTD: action.payload.isApprovedUSTD,\n        isApprovedWMC: action.payload.isApprovedWMC,\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let balanceOf = await store\n        .getState()\n        .blockchain.smartContract.methods.balanceOf(account)\n        .call();\n      let getAllRewards = await store\n        .getState()\n        .blockchain.smartContract.methods.getAllRewards(account)\n        .call();\n      let getAllRewardsWMC = await store\n        .getState()\n        .blockchain.smartContract3.methods.getAllRewards(account)\n        .call();\n      let getTokensStaked = await store\n        .getState()\n        .blockchain.smartContract.methods.getTokensStaked(account)\n        .call();\n      let getTokensStakedWMC = await store\n        .getState()\n        .blockchain.smartContract3.methods.getTokensStaked(account)\n        .call();\n      \n      let balanceOfWMC = await store\n        .getState()\n        .blockchain.smartContract3.methods.balanceOf(account)\n        .call();\n\n      let isApprovedUSTD = await store\n        .getState()\n        .blockchain.smartContract2.methods.isApprovedForAll(account, \"0xf6cf31c74d05A5879Df2ec7AB2ACcE687E6B09C6\")\n        .call();\n\n      let isApprovedWMC = await store\n        .getState()\n        .blockchain.smartContract2.methods.isApprovedForAll(account, \"0x1920B60969Bc3087E2bDA3A4ca60BcAAD747b1a2\")\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          balanceOf,\n          getAllRewards,\n          getAllRewardsWMC,\n          getTokensStaked,\n          getTokensStakedWMC,\n          balanceOfWMC,\n          isApprovedUSTD,\n          isApprovedWMC,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/uSTD.json\";\nimport SmartContract2 from \"../../contracts/WeMintCash.json\";\nimport SmartContract3 from \"../../contracts/wmc.json\";\n// logy\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n       // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId == 1) {\n       // if (NetworkData) {\n          const SmartContractObj = new web3.eth.Contract(\n            SmartContract.abi,\n            // NetworkData.address\n            \"0xf6cf31c74d05A5879Df2ec7AB2ACcE687E6B09C6\" // uSTD\n          );\n          const SmartContractObj2 = new web3.eth.Contract(\n            SmartContract2.abi,\n            // NetworkData.address\n            \"0xA9cB55D05D3351dcD02dd5DC4614e764ce3E1D6e\" // Washington\n          );\n          const SmartContractObj3 = new web3.eth.Contract(\n            SmartContract3.abi,\n            // NetworkData.address\n            \"0x1920B60969Bc3087E2bDA3A4ca60BcAAD747b1a2\" // WMC\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              smartContract2: SmartContractObj2,\n              smartContract3: SmartContractObj3,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  width: inherit; \n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 12px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/1.70aca4b7.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport i1 from \"./assets/images/1.png\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  @media (min-width: 767px) {\n    width: 350px;\n    height: 350px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Ready for stake? 🥩\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [approvingWMC, setApprovingWMC] = useState(true);\n  const [approvingUSTD, setApprovingUSTD] = useState(true);\n\n\n\n  const approveNFTUSTD = (_amount) => {\n    setFeedback(\"Approving...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract2.methods\n      .setApprovalForAll(\"0xf6cf31c74d05A5879Df2ec7AB2ACcE687E6B09C6\",true)\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Approved, please stake your NFT by ID below\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const approveNFTWMC = (_amount) => {\n    setFeedback(\"Approving...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract2.methods\n      .setApprovalForAll(\"0x1920B60969Bc3087E2bDA3A4ca60BcAAD747b1a2\",true) \n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Approved, please stake your NFT by ID below\"\n        );\n        setClaimingNft(false);\n        setApprovingUSTD(true);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const claimRewards = () => {\n    setFeedback(\"Claiming Tendies...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .claimAll()\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Claimed... Check your metamask wallet (make you you have added the custom token address)\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n    \n  };\n\n  const claimWMCRewards = () => {\n    setFeedback(\"Claiming Tendies...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract3.methods\n      .claimAll()\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Claimed... Check your metamask wallet (make you you have added the custom token address\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n    \n  };\n\n  const unstake = () => {\n    setFeedback(\"Unstaking...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .unstakeAll()\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Unstaked Success\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const unstakeWMC = () => {\n    setFeedback(\"Unstaking...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract3.methods\n      .unstakeAll()\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Unstaked Success\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const stake = (idArray) => {\n    setFeedback(\"Staking...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .stakeByIds(idArray)\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Staked succesfully... Wait a few minutes then refresh the page to see your rewards\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const stakeWMC = (idArray) => {\n    setFeedback(\"Staking...Please wait while your tx is being processed\");\n    setClaimingNft(true);\n    blockchain.smartContract3.methods\n      .stakeByIds(idArray)\n      .send({from: blockchain.account})\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Staked succesfully... Wait a few minutes then refresh the page to see your rewards\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  function randomIntFromInterval(min, max) { // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  \n  const rndInt = randomIntFromInterval(1, 10000)\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  function getTextAndStake() {\n    let idslist = document.getElementById('textbox_id').value;\n    let idArray = [idslist];\n    stake(idArray);\n  }\n\n  function getTextAndStakeWMC() {\n    let idslist = document.getElementById('textbox_id').value;\n    let idArray = [idslist];\n    stakeWMC(idArray);\n  }\n\n\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\n        <s.TextTitle\n          style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\" }}\n        >\n          🏦 Welcome To The Meta Reserve 🏦 \n        </s.TextTitle>\n        <s.SpacerMedium />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }}>\n          \n          \n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ backgroundColor: \"#383838\", padding: 24 }}\n          >\n            \n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  The Meta Reserve Locker V.2 \n                  <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        window.open('https://medium.com/@wemintcash/wmc-minted-by-the-presidents-a-guide-eee7db9546d','_blank');\n                      }}\n                    >\n                      GUIDE 🧐\n                    </StyledButton>\n                  \n                  \n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  <div style={{color:\"red\", fontSize: \"20px\"}}>{feedback}</div>\n                </s.TextDescription>\n                <s.SpacerMedium />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                      Connect to the Ethereum network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                 <>\n                 <s.TextTitle style={{ textAlign: \"center\" }}>\n                 \n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                You must approve the staking contracts to get started.\n                </s.TextDescription>\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <StyledButton\n                      disabled={data.isApprovedUSTD ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        approveNFTUSTD(1);\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"APPROVE uSTD CONTRACT\"}\n                    </StyledButton>\n                    <StyledButton\n                      disabled={data.isApprovedWMC ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        approveNFTWMC(1);\n                        getData(); \n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"APPROVE WMC CONTRACT\"}\n                    </StyledButton>\n                    </s.Container>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n\n                    <s.SpacerMedium />\n                \n\n                </s.Container>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                Type in your Presidents Token ID and stake into either uSTD or WMC.\n                </s.TextDescription>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <input type=\"text\" id=\"textbox_id\" name=\"name\" required\n                    minlength=\"1\" size=\"10\" placeholder=\"2053\"></input>\n                    </s.Container>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <StyledButton\n                      disabled={data.isApprovedUSTD ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        getTextAndStake()\n                        \n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"STAKE INTO uSTD\"}\n                    </StyledButton>\n                    \n                    <StyledButton\n                      disabled={data.isApprovedWMC ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        getTextAndStakeWMC()\n                        \n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"STAKE INTO WMC\"}\n                    </StyledButton>\n                    \n                  </s.Container>\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\n                You will earn either 1 uSTD or 1 WMC per day.\n                </s.TextDescription>\n                  <s.SpacerMedium />\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                      YOUR TOKEN ID's CAN BE FOUND ON OPENSEA: \n                      <a style={{color: \"antiquewhite\", paddingLeft: \"5px\"}}\n                        target={\"_blank\"}\n                        href={\"https://opensea.io/collection/wemint-washington\"}\n                      >\n                          https://opensea.io/collection/wemint-washington\n                      </a>\n                    </s.TextDescription>\n                  </s.Container>\n                 \n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                      Advanced Users can interact directly with the contract on etherscan: \n                      <br />\n                      <a style={{color: \"antiquewhite\", paddingLeft: \"5px\"}}\n                        target={\"_blank\"}\n                        href={\"https://etherscan.io/address/0xA9cB55D05D3351dcD02dd5DC4614e764ce3E1D6e\"}\n                      >\n                          WASHINGTON CONTRACT\n                      </a>\n                      <br />\n                      <a style={{color: \"antiquewhite\", paddingLeft: \"5px\"}}\n                        target={\"_blank\"}\n                        href={\"https://etherscan.io/address/0xf6cf31c74d05A5879Df2ec7AB2ACcE687E6B09C6\"}\n                      >\n                          uSTD CONTRACT\n                      </a>\n                      <br />\n                      <a style={{color: \"antiquewhite\", paddingLeft: \"5px\"}}\n                        target={\"_blank\"}\n                        href={\"https://etherscan.io/address/0x1920B60969Bc3087E2bDA3A4ca60BcAAD747b1a2\"}\n                      >\n                          WMC CONTRACT\n                      </a>\n                    </s.TextDescription>\n                  </s.Container>\n                </>\n                )}\n              </>\n          </s.Container>\n          <s.SpacerMedium />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          \n            <s.SpacerMedium />\n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }}\n            >\n              {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n              <>\n              <StyledImg alt={\"example\"} src={`https://ipfs.io/ipfs/Qmdibwx2MmendzExWgsGsyiGodMJ8hvAkLHcAVbMbpK2rG/${rndInt}.png`} />\n              </>\n              ) : (\n              <>\n                <div style={{background: \"slategrey\", padding: \"16px\",margin: \"10px\" , borderRadius: \"5px\"}}>\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                Your Pending Rewards $uSTD:\n                </s.TextDescription>\n                {data.getAllRewards / 1000000000000000000} $uSTD \n                <br />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                Washington ID: {data.getTokensStaked.toString()} Locked in uSTD Staker\n                <br /><br />\n                <StyledButton \n                      disabled={data.isApprovedUSTD && data.getAllRewards > 0 ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        claimRewards();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"CLAIM uSTD REWARDS\"}\n                  </StyledButton>\n                 \n                  <StyledButton\n                      disabled={data.isApprovedUSTD && data.getTokensStaked.length > 0 ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        unstake();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"UNSTAKE uSTD CONTRACT\"}\n                  </StyledButton>\n                </s.TextDescription>\n                <s.SpacerMedium />\n                </div>\n                <div style={{background: \"slategrey\", padding: \"16px\",margin: \"10px\", borderRadius: \"5px\"}}>\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                Your Pending Rewards $WMC:\n                </s.TextDescription>\n                {(data.getAllRewardsWMC) / 1000000000000000000} $WMC \n                <br />\n\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n\n                Washington ID: {data.getTokensStakedWMC.toString()} Locked in WMC Staker\n            \n                </s.TextDescription>\n\n                \n                  <>\n                 \n                  \n                  <StyledButton \n                      disabled={data.isApprovedWMC && data.getAllRewardsWMC > 0 ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        claimWMCRewards();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"CLAIM WMC REWARDS\"}\n                  </StyledButton>\n                  <StyledButton\n                      disabled={data.isApprovedWMC && data.getTokensStakedWMC.length > 0 ? 0 : 1}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        unstakeWMC();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"PLEASE WAIT\" : \"UNSTAKE WMC CONTRACT\"}\n                  </StyledButton>\n                  \n                  </>\n                  </div>\n              </>\n              )}\n            </s.TextTitle>\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\n            Please make sure you are connected to the right network (Ethereum\n            Mainnet) and the correct address. Please note: Once you make the\n            purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\n            Use this software at your own risk. \n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}